
server {
  listen         80 default_server;
  listen         [::]:80 default_server;

  #server_name    example.com www.example.com;

  #root           /data;

  #index          index.html;

  #try_files $uri /index.html;

  location ^~ /warcs/ {
    root /data/;
    autoindex off;

       # Variable to be passed are secure token, timestamp, expiration period (optional)
    secure_link_hmac  $arg_st,$arg_ts,$arg_e;

    # Secret key
    secure_link_hmac_secret testsecret;

    # Message to be verified
    secure_link_hmac_message $uri|$http_range|$arg_ts|$arg_e;

    # Cryptographic hash function to be used
    secure_link_hmac_algorithm sha256;

    # If the hash is incorrect then $secure_link_hmac is a null string.
    # If the hash is correct but the link has already expired then $secure_link_hmac is zero.
    # If the hash is correct and the link has not expired then $secure_link_hmac is one.

    # In production environment, we should not reveal to potential attacker
    # why hmac authentication has failed
    if ($secure_link_hmac != "1") {
        return 403;
        #return 403 "Input: $uri|$arg_ts|$arg_e";
    }

    rewrite ^/data/warcs/(.*)$ /data/warcs/$1 break;
  }
}
